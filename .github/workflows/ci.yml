name: CI

on:
  push:
    branches:
      - staging
      - trying
      - master
      - v0.2.x
  pull_request:
    branches:
      - staging
      - trying
      - master
      - v0.2.x

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install PNPM on ${{ matrix.node-version }}
      run: |
        npm install -g pnpm
    - name: Create a mock .env file on ${{ matrix.node-version }}
      run: |
        echo "TOKEN_SECRET=$(openssl rand -hex 32)" > .env.local
        echo "MONGODB_URI=mongodb://localhost:27017/naotimesdb" >> .env.local
        echo "BOT_SOCKET_HOST=127.0.0.1" >> .env.local
        echo "BOT_SOCKET_PORT=25670" >> .env.lcoal
        echo "BOT_SOCKET_PORT=25670" >> .env.local
        echo "BOT_SOCKET_PASSWORD=$(openssl rand -hex 16)" >> .env.local
    - name: Clean Install and Build on ${{ matrix.node-version }}
      run: |
        pnpm install
        pnpm run build

  lint:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install PNPM on ${{ matrix.node-version }}
      run: |
        npm install -g pnpm
    - name: Clean Install on ${{ matrix.node-version }}
      run: pnpm install
    - name: Lint
      run: |
        pnpm run lint
        pnpm run type-check

  # Trigger bors manually
  end-success:
    name: bors build finished
    if: success()
    runs-on: ubuntu-latest
    needs: [build,lint]

    steps:
      - name: Mark the job as successful
        run: exit 0

  end-failure:
    name: bors build failed
    if: |
      !success() &&
      !contains(github.event.head_commit.message, 'skip ci')
    runs-on: ubuntu-latest
    needs: [build,lint]

    steps:
      - name: Mark the job as a failure
        run: exit 1
